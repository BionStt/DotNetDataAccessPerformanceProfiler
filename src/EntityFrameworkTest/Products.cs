//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace EntityFrameworkTest
{
    public partial class Products
    {
        #region Primitive Properties
    
        public virtual int ProductID
        {
            get;
            set;
        }
    
        public virtual string ProductName
        {
            get;
            set;
        }
    
        public virtual Nullable<int> SupplierID
        {
            get;
            set;
        }
    
        public virtual string QuantityPerUnit
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> UnitPrice
        {
            get;
            set;
        }
    
        public virtual Nullable<short> UnitsInStock
        {
            get;
            set;
        }
    
        public virtual Nullable<short> UnitsOnOrder
        {
            get;
            set;
        }
    
        public virtual Nullable<short> ReorderLevel
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> Discontinued
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual Categories Categories
        {
            get { return _categories; }
            set
            {
                if (!ReferenceEquals(_categories, value))
                {
                    var previousValue = _categories;
                    _categories = value;
                    FixupCategories(previousValue);
                }
            }
        }
        private Categories _categories;

        #endregion

        #region Association Fixup
    
        private void FixupCategories(Categories previousValue)
        {
            if (previousValue != null && previousValue.Products.Contains(this))
            {
                previousValue.Products.Remove(this);
            }
    
            if (Categories != null)
            {
                if (!Categories.Products.Contains(this))
                {
                    Categories.Products.Add(this);
                }
            }
        }

        #endregion

    }
}
